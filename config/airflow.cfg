# Airflow Configuration for GoodBooks ML Pipeline

[core]
# The home folder for airflow, default is ~/airflow
airflow_home = ./airflow

# The folder where your airflow configuration file is located
# Default: ${AIRFLOW_HOME}/airflow.cfg
dags_folder = ./airflow/dags

# The folder where airflow should store its log files
base_log_folder = ./airflow/logs

# Airflow can store logs remotely in AWS S3, Google Cloud Storage or Elastic Search.
remote_logging = False

# The executor class that airflow should use
executor = LocalExecutor

# The SqlAlchemy connection string to the metadata database.
sql_alchemy_conn = sqlite:///./airflow/airflow.db

# Whether to load the examples that ship with Airflow
load_examples = False

[webserver]
# The base url of your website as airflow cannot guess what domain or
# cname you are using. This is used in automated emails that
# airflow sends to point links to the right web server
base_url = http://localhost:8080

# The port on which to run the web server
web_server_port = 8080

# Secret key used to run your flask app
secret_key = goodbooks_airflow_secret_key_2024

[scheduler]
# Task instances listen for external kill signal (when you `airflow tasks kill`),
# this defines the frequency at which they should listen (in seconds).
job_heartbeat_sec = 5

# The number of seconds to wait between consecutive scheduler runs
scheduler_heartbeat_sec = 5

# The maximum number of active DAG runs per DAG
max_active_runs_per_dag = 1

[email]
email_backend = airflow.utils.email.send_email_smtp

[smtp]
# If you want airflow to send emails on retries, failure, and you want to use
# the airflow.utils.email.send_email_smtp function, you have to configure an
# smtp server here
smtp_host = localhost
smtp_starttls = True
smtp_ssl = False
smtp_port = 587
smtp_mail_from = airflow@goodbooks.local

[logging]
# The amount of time (in secs) webserver waits for initial handshake
# while fetching logs from worker.
log_fetch_timeout_sec = 5

# Time zone for the application
default_timezone = UTC
